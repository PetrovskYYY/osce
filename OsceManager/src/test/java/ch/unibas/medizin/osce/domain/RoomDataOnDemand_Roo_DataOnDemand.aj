// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ch.unibas.medizin.osce.domain;

import ch.unibas.medizin.osce.domain.Room;
import java.lang.String;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.stereotype.Component;

privileged aspect RoomDataOnDemand_Roo_DataOnDemand {
    
    declare @type: RoomDataOnDemand: @Component;
    
    private Random RoomDataOnDemand.rnd = new SecureRandom();
    
    private List<Room> RoomDataOnDemand.data;
    
    public Room RoomDataOnDemand.getNewTransientRoom(int index) {
        Room obj = new Room();
        setRoomNumber(obj, index);
        return obj;
    }
    
    public void RoomDataOnDemand.setRoomNumber(Room obj, int index) {
        String roomNumber = "roomNumber_" + index;
        if (roomNumber.length() > 20) {
            roomNumber = roomNumber.substring(0, 20);
        }
        obj.setRoomNumber(roomNumber);
    }
    
    public Room RoomDataOnDemand.getSpecificRoom(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Room obj = data.get(index);
        return Room.findRoom(obj.getId());
    }
    
    public Room RoomDataOnDemand.getRandomRoom() {
        init();
        Room obj = data.get(rnd.nextInt(data.size()));
        return Room.findRoom(obj.getId());
    }
    
    public boolean RoomDataOnDemand.modifyRoom(Room obj) {
        return false;
    }
    
    public void RoomDataOnDemand.init() {
        data = Room.findRoomEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Room' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new ArrayList<ch.unibas.medizin.osce.domain.Room>();
        for (int i = 0; i < 10; i++) {
            Room obj = getNewTransientRoom(i);
            try {
                obj.persist();
            } catch (ConstraintViolationException e) {
                StringBuilder msg = new StringBuilder();
                for (Iterator<ConstraintViolation<?>> it = e.getConstraintViolations().iterator(); it.hasNext();) {
                    ConstraintViolation<?> cv = it.next();
                    msg.append("[").append(cv.getConstraintDescriptor()).append(":").append(cv.getMessage()).append("=").append(cv.getInvalidValue()).append("]");
                }
                throw new RuntimeException(msg.toString(), e);
            }
            obj.flush();
            data.add(obj);
        }
    }
    
}
