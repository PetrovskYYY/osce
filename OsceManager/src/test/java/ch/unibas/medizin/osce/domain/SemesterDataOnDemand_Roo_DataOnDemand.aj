// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ch.unibas.medizin.osce.domain;

import ch.unibas.medizin.osce.domain.Semester;
import java.util.List;
import java.util.Random;
import org.springframework.stereotype.Component;

privileged aspect SemesterDataOnDemand_Roo_DataOnDemand {
    
    declare @type: SemesterDataOnDemand: @Component;
    
    private Random SemesterDataOnDemand.rnd = new java.security.SecureRandom();
    
    private List<Semester> SemesterDataOnDemand.data;
    
    public Semester SemesterDataOnDemand.getNewTransientSemester(int index) {
        ch.unibas.medizin.osce.domain.Semester obj = new ch.unibas.medizin.osce.domain.Semester();
        setSemester(obj, index);
        setCalYear(obj, index);
        return obj;
    }
    
    private void SemesterDataOnDemand.setSemester(Semester obj, int index) {
        ch.unibas.medizin.osce.shared.Semesters semester = ch.unibas.medizin.osce.shared.Semesters.class.getEnumConstants()[0];
        obj.setSemester(semester);
    }
    
    private void SemesterDataOnDemand.setCalYear(Semester obj, int index) {
        java.lang.Integer calYear = new Integer(index);
        obj.setCalYear(calYear);
    }
    
    public Semester SemesterDataOnDemand.getSpecificSemester(int index) {
        init();
        if (index < 0) index = 0;
        if (index > (data.size() - 1)) index = data.size() - 1;
        Semester obj = data.get(index);
        return Semester.findSemester(obj.getId());
    }
    
    public Semester SemesterDataOnDemand.getRandomSemester() {
        init();
        Semester obj = data.get(rnd.nextInt(data.size()));
        return Semester.findSemester(obj.getId());
    }
    
    public boolean SemesterDataOnDemand.modifySemester(Semester obj) {
        return false;
    }
    
    public void SemesterDataOnDemand.init() {
        data = ch.unibas.medizin.osce.domain.Semester.findSemesterEntries(0, 10);
        if (data == null) throw new IllegalStateException("Find entries implementation for 'Semester' illegally returned null");
        if (!data.isEmpty()) {
            return;
        }
        
        data = new java.util.ArrayList<ch.unibas.medizin.osce.domain.Semester>();
        for (int i = 0; i < 10; i++) {
            ch.unibas.medizin.osce.domain.Semester obj = getNewTransientSemester(i);
            obj.persist();
            obj.flush();
            data.add(obj);
        }
    }
    
}
