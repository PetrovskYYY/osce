// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import java.util.List;

import com.google.web.bindery.requestfactory.shared.InstanceRequest;
import com.google.web.bindery.requestfactory.shared.Request;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.google.web.bindery.requestfactory.shared.ServiceName;

@ServiceName("ch.unibas.medizin.osce.domain.OscePostRoom")
public interface OscePostRoomRequest extends RequestContext {

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.OscePostRoomProxy, java.lang.Void> persist();

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.OscePostRoomProxy, java.lang.Void> remove();

    abstract Request<java.lang.Long> countOscePostRooms();

    abstract Request<ch.unibas.medizin.osce.client.managed.request.OscePostRoomProxy> findOscePostRoom(Long id);

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.OscePostRoomProxy>> findAllOscePostRooms();

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.OscePostRoomProxy>> findOscePostRoomEntries(int firstResult, int maxResults);

    abstract Request<OscePostRoomProxy> findOscePostRoomByOscePostAndCourse(CourseProxy course, OscePostProxy oscePost);
	
	abstract Request<List<OscePostRoomProxy>> findOscePostRoomByRoom(Long osceSequenceId, Long roomId);
	
	abstract Request<Integer> countOscePostRoomByCriteria(Long osceid);
	
	abstract Request<List<OscePostRoomProxy>> findListOfOscePostRoomByOsce(Long osceId);
	
	abstract Request<List<OscePostRoomProxy>> insertRoomVertically(Long osceid, CourseProxy course, Long oscePostid, RoomProxy room);
	
	abstract Request<List<OscePostRoomProxy>> replaceRoom(long oldPostRoomId,long osceId,RoomProxy room);
	
	abstract Request<List<OscePostRoomProxy>> findOscePostRoomByCourseID(long courseId);
	
	abstract Request<List<OsceSequenceProxy>> deleteOscePostRoom(Long oscePostRoomId);
	
	abstract Request<List<OscePostRoomProxy>> findOscePostRoomByOscePostId(Long oscePostId);
	
	abstract Request<List<OscePostRoomProxy>> insertRoomForVerticalOscePost(Long oscePostRoomId, Long roomId);
	
	abstract Request<List<OscePostRoomProxy>> findOscePostRoomListByRoomAndOscePostRoomId(Long oscePostRoomId, Long roomId);
	
	abstract Request<List<OscePostRoomProxy>> replaceRoomAndAssignRoomVertically(Long oscePostRoomId, Long roomId);
	
	abstract Request<List<OsceSequenceProxy>> updateOscePostBlueprintSeqNumber(List<Long> oprIdList);
	
	abstract Request<List<OsceSequenceProxy>> updateOscePostSequenceNumber(Long osceId);
	
	abstract Request<List<OscePostRoomProxy>> findOscePostRoomByCourseIdOrderByOscePostSeqNo(Long courseId);
	
	abstract Request<List<OscePostProxy>> findOscePostByCourseId(Long courseId);
}
