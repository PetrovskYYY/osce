// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import java.util.List;

import com.google.web.bindery.requestfactory.shared.InstanceRequest;
import com.google.web.bindery.requestfactory.shared.Request;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.google.web.bindery.requestfactory.shared.ServiceName;

@ServiceName("ch.unibas.medizin.osce.domain.spportal.SPPortalPerson")
public interface SPPortalPersonRequest extends RequestContext {

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.SPPortalPersonProxy, java.lang.Void> persist();

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.SPPortalPersonProxy, java.lang.Void> remove();

    abstract Request<java.lang.Long> countSPPortalpeople();

    abstract Request<ch.unibas.medizin.osce.client.managed.request.SPPortalPersonProxy> findSPPortalPerson(Long id);

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.SPPortalPersonProxy>> findAllSPPortalpeople();

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.SPPortalPersonProxy>> findSPPortalPersonEntries(int firstResult, int maxResults);

	abstract Request<Void> insertStandardizedPatientDetailsInSPportal(Long id);
	
	abstract Request<Long> findAllSpsCountWhoSentEditReq();
	
	abstract Request<List<StandardizedPatientProxy>> findAllSpsWhoSentEditRequest(int start,int max);

	abstract Request<Void> denyAllSpsEditRequest();

	abstract Request<Void> allSpsEditRequestIsApproved();
	
	abstract Request<SPPortalPersonProxy> findSPPersonToCheckWhetherHeHasSentEditReqOrChandedData(Long standardizedPatientId);

	abstract Request<Void> denyEditRequestOfSP(Long spPersonId);

	abstract Request<Void> approveEditRequestOfSP(Long standardizedPatientId, Long spPersonId);
	
	abstract Request<List<AnamnesisCheckTitleProxy>> findAllAnamnesisThatIsSendToDMZ();
	
	abstract Request<List<StandardizedPatientProxy>> findAllStandardizedPAtientWhoesDataIsChangedAtSPPortal(List<SpStandardizedPatientProxy> lisOfAllSPsWhoEditedData);
	
	abstract Request<SpStandardizedPatientProxy> findSpPortalSPBasedOnOsceSPID(Long osceSPId);

}
