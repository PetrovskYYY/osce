// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import ch.unibas.medizin.osce.shared.Semesters;
import ch.unibas.medizin.osce.shared.SurveyStatus;
import com.google.web.bindery.requestfactory.shared.EntityProxy;
import com.google.web.bindery.requestfactory.shared.ProxyForName;
import java.util.Set;

@ProxyForName("ch.unibas.medizin.osce.domain.Semester")
public interface SemesterProxy extends EntityProxy {

    abstract Long getId();

    abstract void setId(Long id);

    abstract Integer getVersion();

    abstract void setVersion(Integer version);

    abstract Semesters getSemester();

    abstract void setSemester(Semesters semester);

    abstract Integer getCalYear();

    abstract void setCalYear(Integer calYear);

    abstract Double getMaximalYearEarnings();

    abstract void setMaximalYearEarnings(Double maximalYearEarnings);

    abstract Double getPricestatist();

    abstract void setPricestatist(Double pricestatist);

    abstract Double getPriceStandardizedPartient();

    abstract void setPriceStandardizedPartient(Double priceStandardizedPartient);

    abstract Set<ch.unibas.medizin.osce.client.managed.request.AdministratorProxy> getAdministrators();

    abstract void setAdministrators(Set<AdministratorProxy> administrators);

    abstract Set<ch.unibas.medizin.osce.client.managed.request.OsceProxy> getOsces();

    abstract void setOsces(Set<OsceProxy> osces);

    abstract Set<ch.unibas.medizin.osce.client.managed.request.PatientInSemesterProxy> getPatientsInSemester();

    abstract void setPatientsInSemester(Set<PatientInSemesterProxy> patientsInSemester);

    abstract Set<ch.unibas.medizin.osce.client.managed.request.TrainingBlockProxy> getTrainingBlocks();

    abstract void setTrainingBlocks(Set<TrainingBlockProxy> trainingBlocks);

    abstract Set<ch.unibas.medizin.osce.client.managed.request.OsceDateProxy> getOsceDates();

    abstract void setOsceDates(Set<OsceDateProxy> osceDates);

    abstract Integer getPreparationRing();

    abstract void setPreparationRing(Integer preparationRing);

    abstract SurveyStatus getSurveyStatus();

    abstract void setSurveyStatus(SurveyStatus surveyStatus);
}
