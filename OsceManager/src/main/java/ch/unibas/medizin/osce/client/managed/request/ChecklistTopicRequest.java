// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import java.util.List;

import com.google.web.bindery.requestfactory.shared.InstanceRequest;
import com.google.web.bindery.requestfactory.shared.Request;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.google.web.bindery.requestfactory.shared.ServiceName;

@ServiceName("ch.unibas.medizin.osce.domain.ChecklistTopic")
public interface ChecklistTopicRequest extends RequestContext {

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.ChecklistTopicProxy, java.lang.Void> persist();

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.ChecklistTopicProxy, java.lang.Void> remove();

    abstract Request<java.lang.Long> countChecklistTopics();

    abstract Request<ch.unibas.medizin.osce.client.managed.request.ChecklistTopicProxy> findChecklistTopic(Long id);

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.ChecklistTopicProxy>> findAllChecklistTopics();

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.ChecklistTopicProxy>> findChecklistTopicEntries(int firstResult, int maxResults);

	abstract Request<Integer> findMaxSortOrder();
	abstract InstanceRequest<ChecklistTopicProxy, Void> topicMoveUp(long checklistID);
	abstract InstanceRequest<ChecklistTopicProxy, Void> topicMoveDown(long checklistID);
	abstract Request<ChecklistTopicProxy> findTopicsByOrderSmaller(int sort_order,long checklistID);
	abstract Request<ChecklistTopicProxy> findTopicsByOrderGreater(int sort_order,long checklistID);
	abstract Request<Boolean> updateSequence(List<ChecklistTopicProxy> ids);
	

}
