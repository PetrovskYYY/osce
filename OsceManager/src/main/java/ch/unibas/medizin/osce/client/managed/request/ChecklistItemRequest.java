// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import java.util.List;

import ch.unibas.medizin.osce.client.a_nonroo.client.ChecklistImportPojoValueProxy;
import ch.unibas.medizin.osce.client.a_nonroo.client.OscePostWiseQuestionProxy;
import ch.unibas.medizin.osce.shared.OptionType;

import com.google.web.bindery.requestfactory.shared.InstanceRequest;
import com.google.web.bindery.requestfactory.shared.Request;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.google.web.bindery.requestfactory.shared.ServiceName;

@ServiceName("ch.unibas.medizin.osce.domain.ChecklistItem")
public interface ChecklistItemRequest extends RequestContext {

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.ChecklistItemProxy, java.lang.Void> persist();

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.ChecklistItemProxy, java.lang.Void> remove();

    abstract Request<java.lang.Long> countChecklistItems();

    abstract Request<ch.unibas.medizin.osce.client.managed.request.ChecklistItemProxy> findChecklistItem(Long id);

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.ChecklistItemProxy>> findAllChecklistItems();

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.ChecklistItemProxy>> findChecklistItemEntries(int firstResult, int maxResults);

    abstract Request<List<ChecklistItemProxy>> findChecklistItemByChecklistId(Long checklistId);
	
	abstract Request<List<ChecklistItemProxy>> findChecklistItemByParentId(Long parentId);
	
	abstract Request<List<ChecklistItemProxy>> findAllChecklistItemByChecklistId(Long checklistId);
	
	abstract Request<ChecklistItemProxy> saveChecklistTabItem(String name, String description, Long standardizedRoleId);
	
	abstract Request<ChecklistItemProxy> saveChecklistTopicItem(String name, String description, Long parentTabItemId, Double weight);
	
	abstract Request<ChecklistItemProxy> saveChecklistQuestionItem(String name, String description, Boolean isOverallQue, OptionType optionType, Long parentTopicItemId);
	
	abstract Request<Boolean> removeChecklistTabItem(Long checklistItemId);
	
	abstract Request<Boolean> removeChecklistTopicItem(Long checklistItemId);
	
	abstract Request<Boolean> removeChecklistItemQuestionItem(Long checklistItemId);
	
	abstract Request<List<ChecklistItemProxy>> findChecklistQuestionByChecklistId(Long checklistId);
	
	abstract Request<List<OscePostWiseQuestionProxy>> findChecklistQuestionByOscePost(Long osceSequenceId);
	
	abstract Request<List<ChecklistImportPojoValueProxy>> findAllChecklistTabsByRoles(Long roleId);

	abstract Request<List<ChecklistImportPojoValueProxy>> findAllChecklistTopicsByRoles(Long roleId);
	
	abstract Request<List<ChecklistItemProxy>> findAllChecklistTopicsByChecklist(Long checklistId);

	abstract Request<List<ChecklistItemProxy>> importChecklistTabsForTab(Long currentRoleId, Long toCopyRoleId ,Long tabId);
	
	abstract Request<List<ChecklistItemProxy>> importChecklistTopicsForRole(Long currentRoleId, Long toCopyRoleId, Long topicId,Long tabId);
	
	abstract Request<List<ChecklistImportPojoValueProxy>> findChecklistQuestionByTopicId(Long topicId);
	
	abstract Request<Void> importChecklistQuestionsForTopic(Long selectedTopicId, Long selectedRole, Long questionId, Long topicId);

	abstract Request<Double> findMaxTopicWeight(Long checklistId);
	
	abstract Request<CheckListProxy> copyOldChecklist(Long oldChecklistId, String title);
	
	abstract Request<ChecklistItemProxy> moveChecklistItemUp(ChecklistItemProxy checklistItemToMoveUp, int seqNumToSet);

	abstract Request<ChecklistItemProxy> moveChecklistItemDown(ChecklistItemProxy checklistItemToMoveDown, int SeqNumberToSet);
	
	abstract Request<List<ChecklistItemProxy>> updateChecklistItemQuestionSequenceNumber(List<Long> checklistItemIdList);
}
