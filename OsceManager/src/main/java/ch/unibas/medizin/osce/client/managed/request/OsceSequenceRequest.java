// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import java.util.List;

import com.google.web.bindery.requestfactory.shared.InstanceRequest;
import com.google.web.bindery.requestfactory.shared.Request;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.google.web.bindery.requestfactory.shared.ServiceName;

@ServiceName("ch.unibas.medizin.osce.domain.OsceSequence")
public interface OsceSequenceRequest extends RequestContext {

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.OsceSequenceProxy, java.lang.Void> persist();

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.OsceSequenceProxy, java.lang.Void> remove();

    abstract Request<java.lang.Long> countOsceSequences();

    abstract Request<ch.unibas.medizin.osce.client.managed.request.OsceSequenceProxy> findOsceSequence(Long id);

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.OsceSequenceProxy>> findAllOsceSequences();

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.OsceSequenceProxy>> findOsceSequenceEntries(int firstResult, int maxResults);

    public abstract Request<OsceSequenceProxy> splitSequence(Long sequenceId);

	public abstract Request<List<OsceSequenceProxy>> findOsceSequenceByOsceDayId(Long osceDayId);
	
	public abstract Request<Long> createOsceSequence(Long osceDayId);
	
	public abstract Request<Void> removeOsceSequence(Long osceSeqId);
	
	public abstract Request<List<OsceSequenceProxy>> findOsceSequenceByOsceId(Long osceId);
	
	public abstract Request<String> manualOsceBreakLater(Long osceSeqId);
	
	public abstract Request<String> manualOsceBreakSooner(Long osceSeqId);
}
