// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import java.util.Date;
import java.util.List;

import com.google.web.bindery.requestfactory.shared.InstanceRequest;
import com.google.web.bindery.requestfactory.shared.Request;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.google.web.bindery.requestfactory.shared.ServiceName;

@ServiceName("ch.unibas.medizin.osce.domain.OsceDate")
public interface OsceDateRequest extends RequestContext {

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.OsceDateProxy, java.lang.Void> persist();

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.OsceDateProxy, java.lang.Void> remove();

    abstract Request<java.lang.Long> countOsceDates();

    abstract Request<ch.unibas.medizin.osce.client.managed.request.OsceDateProxy> findOsceDate(Long id);

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.OsceDateProxy>> findAllOsceDates();

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.OsceDateProxy>> findOsceDateEntries(int firstResult, int maxResults);

    abstract Request<String> dateIsDefinedAsOSceOrTrainingDate(Long semesterId,Date dateOnWidget);

	abstract Request<Boolean> persistThisDateAsOsceDate(Date currentlySelectedDate,Long semesterId);

	abstract Request<Boolean> removeOsceDateForGivenDate(Date currentlySelectedDate,Long semId);

	abstract Request<List<OsceDateProxy>> findOsceDatesFromGivenDateToEndOfMonth(Date date,Long semId);

	abstract Request<Boolean> persistMultipleDateAsOsceDate(List<Date> currentlySelectedDatesList, Long id);

	abstract Request<Boolean> isThereAnyTrainingDateThatIsAfterOSceDate(Long semId);

}
