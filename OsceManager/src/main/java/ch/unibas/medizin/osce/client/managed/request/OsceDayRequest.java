// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import java.util.List;

import com.google.web.bindery.requestfactory.shared.InstanceRequest;
import com.google.web.bindery.requestfactory.shared.Request;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.google.web.bindery.requestfactory.shared.ServiceName;

@ServiceName("ch.unibas.medizin.osce.domain.OsceDay")
public interface OsceDayRequest extends RequestContext {

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.OsceDayProxy, java.lang.Void> persist();

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.OsceDayProxy, java.lang.Void> remove();

    abstract Request<java.lang.Long> countOsceDays();

    abstract Request<ch.unibas.medizin.osce.client.managed.request.OsceDayProxy> findOsceDay(Long id);

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.OsceDayProxy>> findAllOsceDays();

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.OsceDayProxy>> findOsceDayEntries(int firstResult, int maxResults);

    abstract Request<List<StandardizedRoleProxy>> findRoleForSPInSemester (Long patientInSemesterId,Long osceDayId);
	abstract Request<Boolean> findRoleAssignedInOsceDay(Long standardizedRoleId, Long OsceDayId);
	
	abstract Request<java.util.List<AssignmentProxy>> findOsceDayByDoctorAssignment(DoctorProxy proxy);
	
	abstract Request<Boolean> updateLunchBreak(Long osceDayId, Integer afterRotation, Integer flag);
	abstract Request<Boolean> updateTimesAfterRotationShift(Long osceDayIdFrom, Long osceDayIdTo);
	
	//Module 5 Bug Report Solution
		abstract Request<String> schedulePostpone(OsceDayProxy osceDayProxy);
		abstract Request<String> scheduleEarlier(OsceDayProxy osceDayProxy);
		abstract Request<Long> findOsceIdByOsceDayId(Long osceDayId);
		//E Module 5 Bug Report Solution
		
	abstract Request<Boolean> updateRotation(Long osceDayId, Integer rotation);
	abstract Request<java.util.List<OsceDayProxy>> findOSceDaysForAnOsceId(Long osceId);
	
	abstract Request<java.util.List<OsceDayProxy>> findOsceDayBySemester(Long semesterId);
	
	abstract Request<OsceProxy> createOsceDaySequenceCourseAndOscePost(Long osceId);
	
	abstract Request<Void> removeOsceDay(Long osceDayId);
	
	abstract Request<OsceDayProxy> findOsceDayByOsceSequenceId(Long osceSeqId);
}
