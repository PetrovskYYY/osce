// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.request;

import java.util.List;

import com.google.web.bindery.requestfactory.shared.InstanceRequest;
import com.google.web.bindery.requestfactory.shared.Request;
import com.google.web.bindery.requestfactory.shared.RequestContext;
import com.google.web.bindery.requestfactory.shared.ServiceName;

@ServiceName("ch.unibas.medizin.osce.domain.PatientInSemester")
public interface PatientInSemesterRequest extends RequestContext {

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.PatientInSemesterProxy, java.lang.Void> persist();

    abstract InstanceRequest<ch.unibas.medizin.osce.client.managed.request.PatientInSemesterProxy, java.lang.Void> remove();

    abstract Request<java.lang.Long> countPatientInSemesters();

    abstract Request<ch.unibas.medizin.osce.client.managed.request.PatientInSemesterProxy> findPatientInSemester(Long id);

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.PatientInSemesterProxy>> findAllPatientInSemesters();

    abstract Request<java.util.List<ch.unibas.medizin.osce.client.managed.request.PatientInSemesterProxy>> findPatientInSemesterEntries(int firstResult, int maxResults);

    abstract Request<Long> countPatientinSemesterByAdvancedCriteria(Long semesterId, List<AdvancedSearchCriteriaProxy> searchCriteria);

	abstract Request<List<PatientInSemesterProxy>> findPatientInSemesterByAdvancedCriteria(Long semesterId, List<AdvancedSearchCriteriaProxy> searchCriteria);

	abstract Request<List<PatientInSemesterProxy>> findPatientInSemesterByOsceDayAdvancedCriteria(Long semesterId,Long osceDayId,Boolean useOsceDay, List<AdvancedSearchCriteriaProxy> searchCriteria,boolean ignoreAcceptedOsceDay);

	abstract Request<List<PatientInSemesterProxy>> findPatientInSemesterBySemester(Long semesterId,boolean ignoreAcceptedOsceDays,String searchWord);

	abstract Request<List<StandardizedPatientProxy>> findAvailableSPBySemester(Long semesterId);

	abstract Request<Boolean> findAvailableSPActiveBySemester(Long semesterId);
	
	abstract Request<Boolean> checkAndSetFitCriteriaOfRole(Long post,Long semesterId, List<AdvancedSearchCriteriaProxy> searchCriteria);
	
	abstract Request<PatientInSemesterProxy> findPisBySemesterSp(Long semesterId,Long standardizedPatientId);

	abstract Request<Boolean> updatePatientInSemesterForOsceDay(Long patientInSemsterId, List<Long> osceDayIdList);

	abstract  Request<Boolean>  assignSPToSemester(Long semId);
}
