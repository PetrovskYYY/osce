// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.

package ch.unibas.medizin.osce.client.managed.activity;

import ch.unibas.medizin.osce.client.managed.activity.OsceEditActivityWrapper.View;
import ch.unibas.medizin.osce.client.managed.request.ApplicationRequestFactory;
import ch.unibas.medizin.osce.client.managed.request.OsceDayProxy;
import ch.unibas.medizin.osce.client.managed.request.OscePostBlueprintProxy;
import ch.unibas.medizin.osce.client.managed.request.OsceProxy;
import ch.unibas.medizin.osce.client.managed.request.SemesterProxy;
import ch.unibas.medizin.osce.client.managed.request.StudentOscesProxy;
import ch.unibas.medizin.osce.client.managed.request.TaskProxy;
import ch.unibas.medizin.osce.client.managed.ui.OsceDaySetEditor;
import ch.unibas.medizin.osce.client.managed.ui.OscePostBlueprintListEditor;
import ch.unibas.medizin.osce.client.managed.ui.StudentOscesSetEditor;
import ch.unibas.medizin.osce.client.managed.ui.TaskSetEditor;
import ch.unibas.medizin.osce.client.scaffold.activity.IsScaffoldMobileActivity;
import ch.unibas.medizin.osce.client.scaffold.place.ProxyEditView;
import ch.unibas.medizin.osce.client.scaffold.place.ProxyListPlace;
import ch.unibas.medizin.osce.client.scaffold.place.ProxyPlace;
import ch.unibas.medizin.osce.shared.OsceStatus;
import ch.unibas.medizin.osce.shared.StudyYears;
import com.google.gwt.activity.shared.Activity;
import com.google.gwt.event.shared.EventBus;
import com.google.gwt.place.shared.Place;
import com.google.gwt.requestfactory.shared.EntityProxyId;
import com.google.gwt.requestfactory.shared.Receiver;
import com.google.gwt.user.client.ui.AcceptsOneWidget;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collection;
import java.util.Collections;
import java.util.List;
import java.util.Set;

public abstract class OsceEditActivityWrapper_Roo_Gwt implements Activity, IsScaffoldMobileActivity {

    protected Activity wrapped;

    protected View<?> view;

    protected ApplicationRequestFactory requests;

    @Override
    public void start(AcceptsOneWidget display, EventBus eventBus) {
        view.setStudyYearPickerValues(Arrays.asList(StudyYears.values()));
        view.setOsceStatusPickerValues(Arrays.asList(OsceStatus.values()));
        view.setSemesterPickerValues(Collections.<SemesterProxy>emptyList());
        requests.semesterRequest().findSemesterEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.SemesterProxyRenderer.instance().getPaths()).fire(new Receiver<List<SemesterProxy>>() {

            public void onSuccess(List<SemesterProxy> response) {
                List<SemesterProxy> values = new ArrayList<SemesterProxy>();
                values.add(null);
                values.addAll(response);
                view.setSemesterPickerValues(values);
            }
        });
        view.setOsce_daysPickerValues(Collections.<OsceDayProxy>emptyList());
        requests.osceDayRequest().findOsceDayEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.OsceDayProxyRenderer.instance().getPaths()).fire(new Receiver<List<OsceDayProxy>>() {

            public void onSuccess(List<OsceDayProxy> response) {
                List<OsceDayProxy> values = new ArrayList<OsceDayProxy>();
                values.add(null);
                values.addAll(response);
                view.setOsce_daysPickerValues(values);
            }
        });
        view.setOscePostBlueprintsPickerValues(Collections.<OscePostBlueprintProxy>emptyList());
        requests.oscePostBlueprintRequest().findOscePostBlueprintEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.OscePostBlueprintProxyRenderer.instance().getPaths()).fire(new Receiver<List<OscePostBlueprintProxy>>() {

            public void onSuccess(List<OscePostBlueprintProxy> response) {
                List<OscePostBlueprintProxy> values = new ArrayList<OscePostBlueprintProxy>();
                values.add(null);
                values.addAll(response);
                view.setOscePostBlueprintsPickerValues(values);
            }
        });
        view.setTasksPickerValues(Collections.<TaskProxy>emptyList());
        requests.taskRequest().findTaskEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.TaskProxyRenderer.instance().getPaths()).fire(new Receiver<List<TaskProxy>>() {

            public void onSuccess(List<TaskProxy> response) {
                List<TaskProxy> values = new ArrayList<TaskProxy>();
                values.add(null);
                values.addAll(response);
                view.setTasksPickerValues(values);
            }
        });
        view.setOsceStudentsPickerValues(Collections.<StudentOscesProxy>emptyList());
        requests.studentOscesRequest().findStudentOscesEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.StudentOscesProxyRenderer.instance().getPaths()).fire(new Receiver<List<StudentOscesProxy>>() {

            public void onSuccess(List<StudentOscesProxy> response) {
                List<StudentOscesProxy> values = new ArrayList<StudentOscesProxy>();
                values.add(null);
                values.addAll(response);
                view.setOsceStudentsPickerValues(values);
            }
        });
        view.setCopiedOscePickerValues(Collections.<OsceProxy>emptyList());
        requests.osceRequest().findOsceEntries(0, 50).with(ch.unibas.medizin.osce.client.managed.ui.OsceProxyRenderer.instance().getPaths()).fire(new Receiver<List<OsceProxy>>() {

            public void onSuccess(List<OsceProxy> response) {
                List<OsceProxy> values = new ArrayList<OsceProxy>();
                values.add(null);
                values.addAll(response);
                view.setCopiedOscePickerValues(values);
            }
        });
        wrapped.start(display, eventBus);
    }

    public interface View_Roo_Gwt<V extends ch.unibas.medizin.osce.client.scaffold.place.ProxyEditView<ch.unibas.medizin.osce.client.managed.request.OsceProxy, V>> extends ProxyEditView<OsceProxy, V> {

        void setStudyYearPickerValues(Collection<StudyYears> values);

        void setOsceStatusPickerValues(Collection<OsceStatus> values);

        void setSemesterPickerValues(Collection<SemesterProxy> values);

        void setOsce_daysPickerValues(Collection<OsceDayProxy> values);

        void setOscePostBlueprintsPickerValues(Collection<OscePostBlueprintProxy> values);

        void setTasksPickerValues(Collection<TaskProxy> values);

        void setOsceStudentsPickerValues(Collection<StudentOscesProxy> values);

        void setCopiedOscePickerValues(Collection<OsceProxy> values);
    }
}
